name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{steps.yarn-cache-dir-path.outputs.dir}}
      version: ${{steps.yarn-cache-dir-path.outputs.version}}
    steps:
      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "{dir}={$(yarn cache dir)}" >> $GITHUB_OUTPUT
          echo "{version}={$(yarn -v)}" >> $GITHUB_OUTPUT

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Install packages again
        run: yarn install --frozen-lockfile

  build:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}
      - run: ls
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ${{ needs.build_and_test.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: ls node_modules

  # Explore-GitHub-Actions-Dev:
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
  #     - run: echo "${{ vars.TEST }} environment"
